#### iPhoneOS/iOS
#
# It takes recent enough Xcode to use following two targets. It shouldn't
# be a problem by now, but if they don't work, original targets below
# that depend on manual definition of environment variables should still
# work...
#
my %targets = (
    "ios-common" => {
        template         => 1,
        inherit_from     => [ "darwin-common" ],
        sys_id           => "iOS",
        disable          => [ "engine", "async" ],
        cflags           => add(combine('-isysroot $(CROSS_TOP)/SDKs/$(CROSS_SDK) -fno-common',
                                sub { defined($ENV{'IOS_MIN_SDK_VERSION'}) ? '-mios-version-min=$(IOS_MIN_SDK_VERSION)' : '-mios-version-min=7.0'; })),,
    },
    "ios-cross" => {
        inherit_from     => [ "ios-common", asm("armv4_asm") ],
        CC               => "cc",
        cflags           => add("-arch armv7"),
        perlasm_scheme   => "ios32",
    },
    "ios64-cross" => {
        inherit_from     => [ "ios-common", asm("aarch64_asm") ],
        CC               => "cc",
        cflags           => add("-arch arm64"),
        bn_ops           => "SIXTY_FOUR_BIT_LONG RC4_CHAR",
        perlasm_scheme   => "ios64",
    },
    "ios-sim-cross-i386" => {
        inherit_from     => [ "ios-common", asm("x86_asm")  ],
        CC               => "cc",
        CFLAGS           => add(picker(release => "-fomit-frame-pointer")),
        cflags           => add("-arch i386"),
        lib_cppflags     => add("-DL_ENDIAN"),
        bn_ops           => "BN_LLONG RC4_INT",
        perlasm_scheme   => "macosx",
    },
    "ios-sim-cross-x86_64" => {
        inherit_from     => [ "ios-common", asm("x86_64_asm")  ],
        CC               => "cc",
        cflags           => add("-arch x86_64"),
        CFLAGS           => add("-Wall"),
        lib_cppflags     => add("-DL_ENDIAN"),
        bn_ops           => "SIXTY_FOUR_BIT_LONG",
        perlasm_scheme   => "macosx",
    },
);
